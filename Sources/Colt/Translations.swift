//
//  Translations.swift
//  colt
//
//  Created by Angie Sanders on 8/21/20.
//

import Flynn
import Foundation

class Translations: Actor {
    public static let shared = Translations()
    private override init() {
        super.init()
        unsafeCoreAffinity = .onlyPerformance
    }
    
    private var translations: [StringItem] = []
    
    private func _beTranslate(item: StringItem, from slCode: String, to tlCode: String) {
        let slText = item.value
        print("Translating: \(slText)")
        guard let escapedText = slText.stringByAddingPercentEncoding(), let url = URL(string: "https://systran-systran-platform-for-language-processing-v1.p.rapidapi.com/translation/text/translate?source=\(slCode)&target=\(tlCode)&input=\(escapedText)") else { return }
        
        var request = URLRequest(url: url, cachePolicy: .useProtocolCachePolicy, timeoutInterval: .infinity)
        request.allHTTPHeaderFields = systranHeaders

        session.dataTask(with: request, completionHandler: { (data, response, error) in
            self.unsafeSend {                
                //this closure is unsafe
                if let data = data {
                    do {
                        let json = try JSONSerialization.jsonObject(with: data, options: [])
                        if let dict = json as? [String: Any] {
                            if let outputs = dict["outputs"] as? [[String: Any]],
                                let translation = outputs.first?["output"] as? String {
                                self.translations.append(StringItem(key: item.key, value: translation))
                            }
                        }
                    } catch {
                        showError("Failed to parse source strings file")
                    }
                } else if response != nil {
                    print("response: \(response.debugDescription)")
                } else {
                    print("error: \(error!.localizedDescription)")
                }
            }
        }).resume()
    }
}



// MARK: - Autogenerated by FlynnLint
// Contents of file after this marker will be overwritten as needed

extension Translations {

    @discardableResult
    public func beTranslate(item: StringItem, from slCode: String, to tlCode: String) -> Self {
        unsafeSend { self._beTranslate(item: item, from: slCode, to: tlCode) }
        return self
    }

}
